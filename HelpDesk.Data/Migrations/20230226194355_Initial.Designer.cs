// <auto-generated />
using System;
using HelpDesk.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelpDesk.Data.Migrations
{
    [DbContext(typeof(HelpDeskContext))]
    [Migration("20230226194355_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HelpDesk.Business.Models.Chamado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGerenciador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuarioGerador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuarioResponsavel")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdGerenciador");

                    b.HasIndex("IdUsuarioGerador");

                    b.HasIndex("IdUsuarioResponsavel");

                    b.ToTable("Chamados", (string)null);
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataNascimentoConstituicao")
                        .HasColumnType("DATE");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<Guid>("IdEndereco")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("IdTipoPessoa")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco")
                        .IsUnique();

                    b.HasIndex("IdTipoPessoa");

                    b.ToTable("Pessoas", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Setor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(300)");

                    b.Property<Guid>("IdGerenciador")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdGerenciador");

                    b.ToTable("Setores", (string)null);
                });

            modelBuilder.Entity("HelpDesk.Business.Models.TipoPessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoPessoa", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Tipo = "PessoaJuridica"
                        },
                        new
                        {
                            Id = 2L,
                            Tipo = "PessoaFisica"
                        });
                });

            modelBuilder.Entity("UsuarioXCliente", b =>
                {
                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdCliente", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioXCliente");
                });

            modelBuilder.Entity("UsuarioXGerenciador", b =>
                {
                    b.Property<Guid>("IdGerenciador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdGerenciador", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioXGerenciador");
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Cliente", b =>
                {
                    b.HasBaseType("HelpDesk.Business.Models.Pessoa");

                    b.Property<Guid>("IdGerenciador")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("IdGerenciador");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Gerenciador", b =>
                {
                    b.HasBaseType("HelpDesk.Business.Models.Pessoa");

                    b.ToTable("Gerenciadores", (string)null);
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Usuario", b =>
                {
                    b.HasBaseType("HelpDesk.Business.Models.Pessoa");

                    b.Property<Guid>("IdSetor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Login")
                        .HasColumnType("BIGINT");

                    b.HasIndex("IdSetor");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Chamado", b =>
                {
                    b.HasOne("HelpDesk.Business.Models.Cliente", "Cliente")
                        .WithMany("Chamados")
                        .HasForeignKey("IdCliente")
                        .IsRequired();

                    b.HasOne("HelpDesk.Business.Models.Gerenciador", "Gerenciador")
                        .WithMany("Chamados")
                        .HasForeignKey("IdGerenciador")
                        .IsRequired();

                    b.HasOne("HelpDesk.Business.Models.Usuario", "UsuarioGerador")
                        .WithMany("ChamadosGerador")
                        .HasForeignKey("IdUsuarioGerador")
                        .IsRequired();

                    b.HasOne("HelpDesk.Business.Models.Usuario", "UsuarioResponsavel")
                        .WithMany("ChamadosResponsavel")
                        .HasForeignKey("IdUsuarioResponsavel")
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Gerenciador");

                    b.Navigation("UsuarioGerador");

                    b.Navigation("UsuarioResponsavel");
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Pessoa", b =>
                {
                    b.HasOne("HelpDesk.Business.Models.Endereco", "Endereco")
                        .WithOne("Pessoa")
                        .HasForeignKey("HelpDesk.Business.Models.Pessoa", "IdEndereco")
                        .IsRequired();

                    b.HasOne("HelpDesk.Business.Models.TipoPessoa", "TipoPessoa")
                        .WithMany()
                        .HasForeignKey("IdTipoPessoa")
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("TipoPessoa");
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Setor", b =>
                {
                    b.HasOne("HelpDesk.Business.Models.Gerenciador", "Gerenciador")
                        .WithMany("Setores")
                        .HasForeignKey("IdGerenciador")
                        .IsRequired();

                    b.Navigation("Gerenciador");
                });

            modelBuilder.Entity("UsuarioXCliente", b =>
                {
                    b.HasOne("HelpDesk.Business.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .IsRequired();

                    b.HasOne("HelpDesk.Business.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .IsRequired();
                });

            modelBuilder.Entity("UsuarioXGerenciador", b =>
                {
                    b.HasOne("HelpDesk.Business.Models.Gerenciador", null)
                        .WithMany()
                        .HasForeignKey("IdGerenciador")
                        .IsRequired();

                    b.HasOne("HelpDesk.Business.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .IsRequired();
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Cliente", b =>
                {
                    b.HasOne("HelpDesk.Business.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("Id")
                        .IsRequired();

                    b.HasOne("HelpDesk.Business.Models.Gerenciador", "Gerenciador")
                        .WithMany("Clientes")
                        .HasForeignKey("IdGerenciador")
                        .IsRequired();

                    b.Navigation("Gerenciador");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Gerenciador", b =>
                {
                    b.HasOne("HelpDesk.Business.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("Id")
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Usuario", b =>
                {
                    b.HasOne("HelpDesk.Business.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("HelpDesk.Business.Models.Usuario", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Business.Models.Setor", "Setor")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdSetor")
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Endereco", b =>
                {
                    b.Navigation("Pessoa")
                        .IsRequired();
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Setor", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Cliente", b =>
                {
                    b.Navigation("Chamados");
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Gerenciador", b =>
                {
                    b.Navigation("Chamados");

                    b.Navigation("Clientes");

                    b.Navigation("Setores");
                });

            modelBuilder.Entity("HelpDesk.Business.Models.Usuario", b =>
                {
                    b.Navigation("ChamadosGerador");

                    b.Navigation("ChamadosResponsavel");
                });
#pragma warning restore 612, 618
        }
    }
}
